Obj [] (through) [>: [
    print["-- Join:\n"],

    ~> join = [:import['./join.jy']],
    print[
        "Join, written in jsyon: ",
        @:~> join[' UwU ', :Arr[1,2,3,4]]
    ],


    ~> long_fn = [:Fn[$:
        print["async imported and executed: ", :import['./array_gen.jy'] [
            :10,
            :Arr[]
        ]]
    ]],
    

    print["\n\n-- Async and import test:\n"],

    # calling operator (async), you create an async function.
    # async wait_all just calls all functions it receives
    ~> async = [:import['@async']],
    ~> async wait_all [
        :print (async) [69],
        @:~> long_fn (async) [],  # it will produce the last print
        :print (async) [12]
    ],


    print["\n\n-- Range test:\n"],

    ~> range = [:3..[:10]],
    print[@:Str[@:~>range]],
    print[@:Arr[@:~>range]],


    print["\n\n-- Branches test:\n"],

    ~> branches = [:import["@branches"]],
    
    ~> selector = [@:~>branches multi_test_selector[
        :Arr[:Fn[t, $:~>t == ["kek"]], :Fn[$: sleep[:1001] print["lol1"]] (async)],
        :Arr[:Fn[t, $:~>t == ["kek"]], :Fn[$: sleep[:1000] print["lol2"]] (async)],
        :Arr[:Fn[t, $:~>t == ["not kek"]], :Fn[$: print["lol not kek"]] (async)]
    ]],
    ~> async wait_all[@..:~> selector["kek"] []],

    print["end selector 1"],

    ~> selector = [@:~>branches multi_match_selector[
        :Arr["kek", :Fn[$: sleep[:1001] print["lol1"]] (async)],
        :Arr["kek", :Fn[$: sleep[:1000] print["lol2"]] (async)],
        :Arr["not kek", :Fn[$: print["lol not kek #not comment"]] (async)]  # but this is comment
    ]],
    ~> async wait_all[@..:~> selector["not kek"] []],

    print["end selector 2"],


    print["\n\n-- Dynamic selector test:\n"],

    ~>test = [:Fn[o, t, $:~>o {@:~>t}]],
    ~>obj = [:Obj[
        :Arr[a, :1],
        :Arr[b, :2],
        :Arr[c, :3]
    ]],

    print[@:~>test[@:~>obj, a]],  # also caching tests
    print[@:~>test[@:~>obj, b]],
    print[@:~>test[@:~>obj, c]],
    print[@:~>test[@:~>obj, a]],
    print[@:~>test[@:~>obj, b]],
    print[@:~>test[@:~>obj, c]],


    print["\n\n-- Speed test:\n"],
    import[speed_test.jy],
]]

